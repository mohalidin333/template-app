src/lib/seo.js

// SEO utility functions and constants
export const SEO_CONFIG = {
  siteName: 'Your Site Name',
  siteUrl: process.env.NEXT_PUBLIC_SITE_URL || 'https://your-domain.com',
  defaultTitle: 'Your Default Title',
  defaultDescription: 'Your default description for SEO',
  defaultImage: '/images/og-default.jpg',
  twitterHandle: '@yourtwitterhandle',
  lang: 'en',
  // ‚úÖ ENHANCEMENTS ADDED HERE
  defaultKeywords: ['your', 'main', 'keywords', 'business', 'service'],
  locale: 'en_US',
  themeColor: '#000000',
  author: 'Your Name',
  publisher: 'Your Company Name',
}

export const generateMetadata = ({
  title,
  description,
  image,
  url,
  type = 'website',
  publishedTime,
  modifiedTime,
  keywords, // ‚úÖ Added keywords parameter
}) => {
  const metaTitle = title ? `${title} | ${SEO_CONFIG.siteName}` : SEO_CONFIG.defaultTitle
  const metaDescription = description || SEO_CONFIG.defaultDescription
  const metaImage = image || SEO_CONFIG.defaultImage
  const metaUrl = url || SEO_CONFIG.siteUrl
  const metaKeywords = keywords || SEO_CONFIG.defaultKeywords

  return {
    title: metaTitle,
    description: metaDescription,
    // ‚úÖ ENHANCEMENTS ADDED HERE
    keywords: metaKeywords,
    authors: [{ name: SEO_CONFIG.author }],
    creator: SEO_CONFIG.author,
    publisher: SEO_CONFIG.publisher,
    themeColor: SEO_CONFIG.themeColor,
    openGraph: {
      title: metaTitle,
      description: metaDescription,
      url: metaUrl,
      siteName: SEO_CONFIG.siteName,
      images: [
        {
          url: metaImage,
          width: 1200,
          height: 630,
          alt: metaTitle,
        },
      ],
      locale: SEO_CONFIG.locale, // ‚úÖ Updated to use config
      type,
      ...(publishedTime && { publishedTime }),
      ...(modifiedTime && { modifiedTime }),
    },
    twitter: {
      card: 'summary_large_image',
      title: metaTitle,
      description: metaDescription,
      images: [metaImage],
      creator: SEO_CONFIG.twitterHandle,
    },
    robots: {
      index: true,
      follow: true,
      googleBot: {
        index: true,
        follow: true,
        'max-video-preview': -1,
        'max-image-preview': 'large',
        'max-snippet': -1,
      },
    },
  }
}

src/app/layout.js

import { SEO_CONFIG } from '@/lib/seo'
import './globals.css'

export const metadata = {
  title: {
    template: `%s | ${SEO_CONFIG.siteName}`,
    default: SEO_CONFIG.defaultTitle,
  },
  description: SEO_CONFIG.defaultDescription,
  // ‚úÖ ENHANCEMENTS ADDED HERE
  keywords: SEO_CONFIG.defaultKeywords,
  authors: [{ name: SEO_CONFIG.author }],
  creator: SEO_CONFIG.author,
  publisher: SEO_CONFIG.publisher,
  themeColor: SEO_CONFIG.themeColor,
  formatDetection: {
    email: false,
    address: false,
    telephone: false,
  },
  openGraph: {
    title: SEO_CONFIG.defaultTitle,
    description: SEO_CONFIG.defaultDescription,
    url: SEO_CONFIG.siteUrl,
    siteName: SEO_CONFIG.siteName,
    images: [
      {
        url: SEO_CONFIG.defaultImage,
        width: 1200,
        height: 630,
      },
    ],
    locale: SEO_CONFIG.locale, // ‚úÖ Updated to use config
    type: 'website',
  },
  twitter: {
    card: 'summary_large_image',
    title: SEO_CONFIG.defaultTitle,
    description: SEO_CONFIG.defaultDescription,
    images: [SEO_CONFIG.defaultImage],
    creator: SEO_CONFIG.twitterHandle,
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      'max-video-preview': -1,
      'max-image-preview': 'large',
      'max-snippet': -1,
    },
  },
}

export default function RootLayout({ children }) {
  return (
    <html lang={SEO_CONFIG.lang}>
      <head>
        {/* ‚úÖ ENHANCEMENTS ADDED HERE */}
        <meta name="theme-color" content={SEO_CONFIG.themeColor} />
        <meta name="color-scheme" content="light dark" />
        <meta name="application-name" content={SEO_CONFIG.siteName} />
        <meta name="apple-mobile-web-app-title" content={SEO_CONFIG.siteName} />
        <meta name="msapplication-TileColor" content={SEO_CONFIG.themeColor} />
      </head>
      <body>
        {children}
      </body>
    </html>
  )
}

src/components/SEO/MetaTags.js

import Head from 'next/head'
import { SEO_CONFIG } from '@/lib/seo'

export default function MetaTags({
  title,
  description,
  image,
  url,
  type = 'website',
  publishedTime,
  modifiedTime,
  keywords, // ‚úÖ Added keywords prop
}) {
  const metaTitle = title ? `${title} | ${SEO_CONFIG.siteName}` : SEO_CONFIG.siteName
  const metaDescription = description || SEO_CONFIG.defaultDescription
  const metaImage = image || SEO_CONFIG.defaultImage
  const metaUrl = url || SEO_CONFIG.siteUrl
  const metaKeywords = keywords || SEO_CONFIG.defaultKeywords

  return (
    <Head>
      <title>{metaTitle}</title>
      <meta name="description" content={metaDescription} />
      {/* ‚úÖ ENHANCEMENTS ADDED HERE */}
      <meta name="keywords" content={metaKeywords.join(', ')} />
      <meta name="author" content={SEO_CONFIG.author} />
      <meta name="publisher" content={SEO_CONFIG.publisher} />
      <meta name="theme-color" content={SEO_CONFIG.themeColor} />
      <meta name="color-scheme" content="light dark" />
      <meta name="application-name" content={SEO_CONFIG.siteName} />
      <meta name="apple-mobile-web-app-title" content={SEO_CONFIG.siteName} />
      <meta name="msapplication-TileColor" content={SEO_CONFIG.themeColor} />
      
      <meta name="robots" content="index, follow" />
      <link rel="canonical" href={metaUrl} />
      
      {/* Open Graph */}
      <meta property="og:title" content={metaTitle} />
      <meta property="og:description" content={metaDescription} />
      <meta property="og:image" content={metaImage} />
      <meta property="og:url" content={metaUrl} />
      <meta property="og:type" content={type} />
      <meta property="og:site_name" content={SEO_CONFIG.siteName} />
      <meta property="og:locale" content={SEO_CONFIG.locale} />
      {publishedTime && <meta property="article:published_time" content={publishedTime} />}
      {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
      
      {/* Twitter */}
      <meta name="twitter:card" content="summary_large_image" />
      <meta name="twitter:title" content={metaTitle} />
      <meta name="twitter:description" content={metaDescription} />
      <meta name="twitter:image" content={metaImage} />
      <meta name="twitter:creator" content={SEO_CONFIG.twitterHandle} />
      
      {/* Additional meta tags */}
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <meta httpEquiv="Content-Type" content="text/html; charset=utf-8" />
      <meta name="language" content="English" />
    </Head>
  )
}

src/lib/metadata.js

import { SEO_CONFIG, generateMetadata } from './seo'

// Page-specific metadata configurations
export const homePageMetadata = generateMetadata({
  title: 'Home',
  description: 'Welcome to our website - your one-stop solution for...',
  url: SEO_CONFIG.siteUrl,
  keywords: ['home', 'main', 'welcome', ...SEO_CONFIG.defaultKeywords],
})

export const aboutPageMetadata = generateMetadata({
  title: 'About Us',
  description: 'Learn more about our company, mission, and values.',
  url: `${SEO_CONFIG.siteUrl}/about`,
  keywords: ['about', 'company', 'mission', 'values', ...SEO_CONFIG.defaultKeywords],
})

export const blogPageMetadata = generateMetadata({
  title: 'Blog',
  description: 'Read our latest articles and insights.',
  url: `${SEO_CONFIG.siteUrl}/blog`,
  keywords: ['blog', 'articles', 'insights', 'news', ...SEO_CONFIG.defaultKeywords],
})

export const generateBlogPostMetadata = (post) => {
  return generateMetadata({
    title: post.title,
    description: post.excerpt,
    image: post.featuredImage,
    url: `${SEO_CONFIG.siteUrl}/blog/${post.slug}`,
    type: 'article',
    publishedTime: post.publishedAt,
    modifiedTime: post.updatedAt,
    keywords: [...(post.tags || []), ...SEO_CONFIG.defaultKeywords],
  })
}

export const generateProductMetadata = (product) => {
  return generateMetadata({
    title: product.name,
    description: product.description,
    image: product.images?.[0],
    url: `${SEO_CONFIG.siteUrl}/products/${product.slug}`,
    type: 'product',
    keywords: [...(product.categories || []), 'product', ...SEO_CONFIG.defaultKeywords],
  })
}


üìç Summary of Placement

Core enhancements ‚Üí src/lib/seo.js (SEO_CONFIG object)
App Router ‚Üí src/app/layout.js (metadata object)
Pages Router ‚Üí src/components/SEO/MetaTags.js (Head component)
Page-specific metadata ‚Üí src/lib/metadata.js (individual page configs)

üéØ What These Enhancements Add

Keywords: Better search engine understanding
Theme color: Consistent branding in mobile browsers
Author/Publisher: Better content attribution
Color scheme: Dark/light mode support
App names: Better mobile app integration
Locale: More specific language targeting

These enhancements are optional but recommended for a more complete SEO setup!